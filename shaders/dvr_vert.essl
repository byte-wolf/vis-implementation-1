#ifndef GL_ES
#version 330 es
#endif

precision highp float;
precision highp int;

uniform vec3 uCameraPosition;
uniform vec3 uVolumeSize;
uniform vec3 uCuttingPlanePosition;

out vec3 vTransformedPosition;
out vec3 vTransformedCameraPosition;
out vec3 vRayDirection;
out vec3 vWorldPosition;
out vec3 vCuttingPlanePositionTransformed;

void main() {
    vec4 worldPos = modelMatrix * vec4(position, 1.0);

    vTransformedPosition = (worldPos.xyz / uVolumeSize) + 0.5;
    vTransformedCameraPosition = (uCameraPosition / uVolumeSize) + 0.5;
    vRayDirection = vTransformedPosition - vTransformedCameraPosition;
    vCuttingPlanePositionTransformed = (uCuttingPlanePosition / uVolumeSize) + 0.5;

    gl_Position = projectionMatrix * viewMatrix * worldPos;
}